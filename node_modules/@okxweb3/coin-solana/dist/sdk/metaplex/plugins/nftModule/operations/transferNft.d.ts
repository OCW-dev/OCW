import { TokenStandard } from '../../../mpl-token-metadata';
import { PublicKey } from '../../../../web3';
import { Signer, SplTokenAmount, Program } from "../../../types";
import { TokenMetadataAuthorityHolder, TokenMetadataAuthorityTokenDelegate, TokenMetadataAuthorizationDetails } from '../Authorization';
import { TransactionBuilder, Option } from '../../../utils';
export type TransferNftInput = {
    nftOrSft: {
        readonly tokenStandard: Option<TokenStandard>;
        readonly address: PublicKey;
    };
    authority: Signer | TokenMetadataAuthorityTokenDelegate | TokenMetadataAuthorityHolder;
    authorizationDetails?: TokenMetadataAuthorizationDetails;
    fromOwner?: PublicKey;
    fromToken?: PublicKey;
    toOwner: PublicKey;
    toToken?: PublicKey;
    amount?: SplTokenAmount;
};
export type TransferNftBuilderParams = Omit<TransferNftInput, 'confirmOptions'> & {
    instructionKey?: string;
};
export declare const transferNftBuilder: (params: TransferNftBuilderParams, payer: Signer, programs?: Program[]) => TransactionBuilder;
