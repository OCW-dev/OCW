import { InstructionType, IInstructionInputData } from '../instruction';
import { PublicKey } from '../publickey';
import { Transaction, TransactionInstruction } from '../transaction';
export type CreateAccountParams = {
    fromPubkey: PublicKey;
    newAccountPubkey: PublicKey;
    lamports: number;
    space: number;
    programId: PublicKey;
};
export type TransferParams = {
    fromPubkey: PublicKey;
    toPubkey: PublicKey;
    lamports: number | bigint;
};
export type AssignParams = {
    accountPubkey: PublicKey;
    programId: PublicKey;
};
export type CreateAccountWithSeedParams = {
    fromPubkey: PublicKey;
    newAccountPubkey: PublicKey;
    basePubkey: PublicKey;
    seed: string;
    lamports: number;
    space: number;
    programId: PublicKey;
};
export type CreateNonceAccountParams = {
    fromPubkey: PublicKey;
    noncePubkey: PublicKey;
    authorizedPubkey: PublicKey;
    lamports: number;
};
export type CreateNonceAccountWithSeedParams = {
    fromPubkey: PublicKey;
    noncePubkey: PublicKey;
    authorizedPubkey: PublicKey;
    lamports: number;
    basePubkey: PublicKey;
    seed: string;
};
export type InitializeNonceParams = {
    noncePubkey: PublicKey;
    authorizedPubkey: PublicKey;
};
export type AdvanceNonceParams = {
    noncePubkey: PublicKey;
    authorizedPubkey: PublicKey;
};
export type WithdrawNonceParams = {
    noncePubkey: PublicKey;
    authorizedPubkey: PublicKey;
    toPubkey: PublicKey;
    lamports: number;
};
export type AuthorizeNonceParams = {
    noncePubkey: PublicKey;
    authorizedPubkey: PublicKey;
    newAuthorizedPubkey: PublicKey;
};
export type AllocateParams = {
    accountPubkey: PublicKey;
    space: number;
};
export type AllocateWithSeedParams = {
    accountPubkey: PublicKey;
    basePubkey: PublicKey;
    seed: string;
    space: number;
    programId: PublicKey;
};
export type AssignWithSeedParams = {
    accountPubkey: PublicKey;
    basePubkey: PublicKey;
    seed: string;
    programId: PublicKey;
};
export type TransferWithSeedParams = {
    fromPubkey: PublicKey;
    basePubkey: PublicKey;
    toPubkey: PublicKey;
    lamports: number | bigint;
    seed: string;
    programId: PublicKey;
};
export type DecodedTransferInstruction = {
    fromPubkey: PublicKey;
    toPubkey: PublicKey;
    lamports: bigint;
};
export type DecodedTransferWithSeedInstruction = {
    fromPubkey: PublicKey;
    basePubkey: PublicKey;
    toPubkey: PublicKey;
    lamports: bigint;
    seed: string;
    programId: PublicKey;
};
export declare class SystemInstruction {
    constructor();
    static decodeInstructionType(instruction: TransactionInstruction): SystemInstructionType;
    static decodeCreateAccount(instruction: TransactionInstruction): CreateAccountParams;
    static decodeTransfer(instruction: TransactionInstruction): DecodedTransferInstruction;
    static decodeTransferWithSeed(instruction: TransactionInstruction): DecodedTransferWithSeedInstruction;
    static decodeAllocate(instruction: TransactionInstruction): AllocateParams;
    static decodeAllocateWithSeed(instruction: TransactionInstruction): AllocateWithSeedParams;
    static decodeAssign(instruction: TransactionInstruction): AssignParams;
    static decodeAssignWithSeed(instruction: TransactionInstruction): AssignWithSeedParams;
    static decodeCreateWithSeed(instruction: TransactionInstruction): CreateAccountWithSeedParams;
    static decodeNonceInitialize(instruction: TransactionInstruction): InitializeNonceParams;
    static decodeNonceAdvance(instruction: TransactionInstruction): AdvanceNonceParams;
    static decodeNonceWithdraw(instruction: TransactionInstruction): WithdrawNonceParams;
    static decodeNonceAuthorize(instruction: TransactionInstruction): AuthorizeNonceParams;
    static checkProgramId(programId: PublicKey): void;
    static checkKeyLength(keys: Array<any>, expectedLength: number): void;
}
export type SystemInstructionType = 'AdvanceNonceAccount' | 'Allocate' | 'AllocateWithSeed' | 'Assign' | 'AssignWithSeed' | 'AuthorizeNonceAccount' | 'Create' | 'CreateWithSeed' | 'InitializeNonceAccount' | 'Transfer' | 'TransferWithSeed' | 'WithdrawNonceAccount' | 'UpgradeNonceAccount';
export declare const SYSTEM_INSTRUCTION_LAYOUTS: Readonly<{
    AdvanceNonceAccount: InstructionType<IInstructionInputData>;
    Allocate: InstructionType<IInstructionInputData & {
        space: number;
    }>;
    AllocateWithSeed: InstructionType<IInstructionInputData & {
        base: Uint8Array;
        programId: Uint8Array;
        seed: string;
        space: number;
    }>;
    Assign: InstructionType<IInstructionInputData & {
        programId: Uint8Array;
    }>;
    AssignWithSeed: InstructionType<IInstructionInputData & {
        base: Uint8Array;
        seed: string;
        programId: Uint8Array;
    }>;
    AuthorizeNonceAccount: InstructionType<IInstructionInputData & {
        authorized: Uint8Array;
    }>;
    Create: InstructionType<IInstructionInputData & {
        lamports: number;
        programId: Uint8Array;
        space: number;
    }>;
    CreateWithSeed: InstructionType<IInstructionInputData & {
        base: Uint8Array;
        lamports: number;
        programId: Uint8Array;
        seed: string;
        space: number;
    }>;
    InitializeNonceAccount: InstructionType<IInstructionInputData & {
        authorized: Uint8Array;
    }>;
    Transfer: InstructionType<IInstructionInputData & {
        lamports: bigint;
    }>;
    TransferWithSeed: InstructionType<IInstructionInputData & {
        lamports: bigint;
        programId: Uint8Array;
        seed: string;
    }>;
    WithdrawNonceAccount: InstructionType<IInstructionInputData & {
        lamports: number;
    }>;
    UpgradeNonceAccount: InstructionType<IInstructionInputData>;
}>;
export declare class SystemProgram {
    constructor();
    static programId: PublicKey;
    static createAccount(params: CreateAccountParams): TransactionInstruction;
    static transfer(params: TransferParams | TransferWithSeedParams): TransactionInstruction;
    static assign(params: AssignParams | AssignWithSeedParams): TransactionInstruction;
    static createAccountWithSeed(params: CreateAccountWithSeedParams): TransactionInstruction;
    static createNonceAccount(params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams): Transaction;
    static nonceInitialize(params: InitializeNonceParams): TransactionInstruction;
    static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction;
    static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction;
    static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction;
    static allocate(params: AllocateParams | AllocateWithSeedParams): TransactionInstruction;
}
