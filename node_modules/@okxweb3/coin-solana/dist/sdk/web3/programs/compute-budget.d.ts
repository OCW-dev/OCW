import { InstructionType, IInstructionInputData } from '../instruction';
import { PublicKey } from '../publickey';
import { TransactionInstruction } from '../transaction';
export declare class ComputeBudgetInstruction {
    constructor();
    static decodeInstructionType(instruction: TransactionInstruction): ComputeBudgetInstructionType;
    static decodeRequestUnits(instruction: TransactionInstruction): RequestUnitsParams;
    static decodeRequestHeapFrame(instruction: TransactionInstruction): RequestHeapFrameParams;
    static decodeSetComputeUnitLimit(instruction: TransactionInstruction): SetComputeUnitLimitParams;
    static decodeSetComputeUnitPrice(instruction: TransactionInstruction): SetComputeUnitPriceParams;
    static checkProgramId(programId: PublicKey): void;
}
export type ComputeBudgetInstructionType = 'RequestUnits' | 'RequestHeapFrame' | 'SetComputeUnitLimit' | 'SetComputeUnitPrice';
export interface RequestUnitsParams {
    units: number;
    additionalFee: number;
}
export type RequestHeapFrameParams = {
    bytes: number;
};
export interface SetComputeUnitLimitParams {
    units: number;
}
export interface SetComputeUnitPriceParams {
    microLamports: number | bigint;
}
export declare const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS: Readonly<{
    RequestUnits: InstructionType<IInstructionInputData & Readonly<RequestUnitsParams>>;
    RequestHeapFrame: InstructionType<IInstructionInputData & Readonly<RequestHeapFrameParams>>;
    SetComputeUnitLimit: InstructionType<IInstructionInputData & Readonly<SetComputeUnitLimitParams>>;
    SetComputeUnitPrice: InstructionType<IInstructionInputData & Readonly<SetComputeUnitPriceParams>>;
}>;
export declare class ComputeBudgetProgram {
    constructor();
    static programId: PublicKey;
    static requestUnits(params: RequestUnitsParams): TransactionInstruction;
    static requestHeapFrame(params: RequestHeapFrameParams): TransactionInstruction;
    static setComputeUnitLimit(params: SetComputeUnitLimitParams): TransactionInstruction;
    static setComputeUnitPrice(params: SetComputeUnitPriceParams): TransactionInstruction;
}
