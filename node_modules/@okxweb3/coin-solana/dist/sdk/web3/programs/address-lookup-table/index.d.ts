import * as BufferLayout from '../../../buffer-layout';
import { PublicKey } from '../../publickey';
import { TransactionInstruction } from '../../transaction';
import { IInstructionInputData } from '../../instruction';
export * from './state';
export type CreateLookupTableParams = {
    authority: PublicKey;
    payer: PublicKey;
    recentSlot: bigint | number;
};
export type FreezeLookupTableParams = {
    lookupTable: PublicKey;
    authority: PublicKey;
};
export type ExtendLookupTableParams = {
    lookupTable: PublicKey;
    authority: PublicKey;
    payer?: PublicKey;
    addresses: Array<PublicKey>;
};
export type DeactivateLookupTableParams = {
    lookupTable: PublicKey;
    authority: PublicKey;
};
export type CloseLookupTableParams = {
    lookupTable: PublicKey;
    authority: PublicKey;
    recipient: PublicKey;
};
export type LookupTableInstructionType = 'CreateLookupTable' | 'ExtendLookupTable' | 'CloseLookupTable' | 'FreezeLookupTable' | 'DeactivateLookupTable';
export declare const LOOKUP_TABLE_INSTRUCTION_LAYOUTS: Readonly<{
    CreateLookupTable: {
        index: number;
        layout: BufferLayout.Structure<IInstructionInputData & Readonly<{
            recentSlot: bigint;
            bumpSeed: number;
        }>>;
    };
    FreezeLookupTable: {
        index: number;
        layout: BufferLayout.Structure<IInstructionInputData>;
    };
    ExtendLookupTable: {
        index: number;
        layout: BufferLayout.Structure<IInstructionInputData & Readonly<{
            numberOfAddresses: bigint;
            addresses: Array<Uint8Array>;
        }>>;
    };
    DeactivateLookupTable: {
        index: number;
        layout: BufferLayout.Structure<IInstructionInputData>;
    };
    CloseLookupTable: {
        index: number;
        layout: BufferLayout.Structure<IInstructionInputData>;
    };
}>;
export declare class AddressLookupTableInstruction {
    constructor();
    static decodeInstructionType(instruction: TransactionInstruction): LookupTableInstructionType;
    static decodeCreateLookupTable(instruction: TransactionInstruction): CreateLookupTableParams;
    static decodeExtendLookupTable(instruction: TransactionInstruction): ExtendLookupTableParams;
    static decodeCloseLookupTable(instruction: TransactionInstruction): CloseLookupTableParams;
    static decodeFreezeLookupTable(instruction: TransactionInstruction): FreezeLookupTableParams;
    static decodeDeactivateLookupTable(instruction: TransactionInstruction): DeactivateLookupTableParams;
    static checkProgramId(programId: PublicKey): void;
    static checkKeysLength(keys: Array<any>, expectedLength: number): void;
}
export declare class AddressLookupTableProgram {
    constructor();
    static programId: PublicKey;
    static createLookupTable(params: CreateLookupTableParams): [TransactionInstruction, PublicKey];
    static freezeLookupTable(params: FreezeLookupTableParams): TransactionInstruction;
    static extendLookupTable(params: ExtendLookupTableParams): TransactionInstruction;
    static deactivateLookupTable(params: DeactivateLookupTableParams): TransactionInstruction;
    static closeLookupTable(params: CloseLookupTableParams): TransactionInstruction;
}
