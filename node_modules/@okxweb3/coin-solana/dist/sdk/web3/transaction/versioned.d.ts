/// <reference types="node" />
import { Signer } from '../keypair';
import { VersionedMessage } from '../message/versioned';
import { PublicKey } from '../publickey';
export type TransactionVersion = 'legacy' | 0;
export declare class VersionedTransaction {
    signatures: Array<Uint8Array>;
    message: VersionedMessage;
    get signature(): Buffer | null;
    get version(): TransactionVersion;
    constructor(message: VersionedMessage, signatures?: Array<Uint8Array>);
    serialize(): Uint8Array;
    static deserialize(serializedTransaction: Uint8Array): VersionedTransaction;
    sign(signers: Array<Signer>): void;
    addSignature(publicKey: PublicKey, signature: Uint8Array): void;
}
