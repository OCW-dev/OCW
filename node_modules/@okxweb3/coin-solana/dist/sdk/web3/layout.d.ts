import * as BufferLayout from '../buffer-layout';
export declare const publicKey: (property?: string) => BufferLayout.Blob;
export declare const signature: (property?: string) => BufferLayout.Blob;
export declare const uint64: (property?: string) => BufferLayout.Blob;
export declare const rustString: (property?: string) => BufferLayout.Layout<string>;
export declare const authorized: (property?: string) => BufferLayout.Structure<Readonly<{
    staker: Uint8Array;
    withdrawer: Uint8Array;
}>>;
export declare const lockup: (property?: string) => BufferLayout.Structure<Readonly<{
    custodian: Uint8Array;
    epoch: number;
    unixTimestamp: number;
}>>;
export declare const voteInit: (property?: string) => BufferLayout.Structure<Readonly<{
    authorizedVoter: Uint8Array;
    authorizedWithdrawer: Uint8Array;
    commission: number;
    nodePubkey: Uint8Array;
}>>;
export declare function getAlloc(type: any, fields: any): number;
