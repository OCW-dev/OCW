"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Keypair = void 0;
const publickey_1 = require("./publickey");
const crypto_lib_1 = require("@okxweb3/crypto-lib");
class Keypair {
    constructor(keypair) {
        this._keypair = keypair;
    }
    static fromSecretKey(secretKey, options) {
        if (!options || !options.skipValidation) {
            const encoder = new TextEncoder();
            const signData = encoder.encode('@solana/web3.js-validation-v1');
            const signature = crypto_lib_1.signUtil.ed25519.sign(signData, secretKey);
            const publicKey = crypto_lib_1.signUtil.ed25519.publicKeyCreate(secretKey);
            if (!crypto_lib_1.signUtil.ed25519.verify(signData, signature, publicKey)) {
                throw new Error('provided secretKey is invalid');
            }
        }
        const publicKey = crypto_lib_1.signUtil.ed25519.publicKeyCreate(secretKey);
        return new Keypair({ publicKey: publicKey, secretKey: secretKey });
    }
    get publicKey() {
        return new publickey_1.PublicKey(this._keypair.publicKey);
    }
    get secretKey() {
        return this._keypair.secretKey;
    }
}
exports.Keypair = Keypair;
//# sourceMappingURL=keypair.js.map