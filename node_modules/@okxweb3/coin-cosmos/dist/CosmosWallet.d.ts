import { BaseWallet, CalcTxHashParams, GetAddressParams, GetDerivedPathParam, MpcMessageParam, MpcRawTransactionParam, MpcTransactionParam, NewAddressParams, SignTxParams, ValidAddressParams, ValidPrivateKeyParams, ValidSignedTransactionParams } from '@okxweb3/coin-base';
import { AminoConverters, GeneratedType, Height } from './';
export interface CosmosTransferParam {
    fromAddress: string;
    toAddress: string;
    demon: string;
    amount: number;
}
export interface CosmosIbcTransferParam extends CosmosTransferParam {
    sourcePort: string;
    sourceChannel: string;
    ibcTimeoutHeight?: Height;
    ibcTimeoutTimestamp?: number;
}
export type CosmosSignParam = {
    type: "transfer" | "ibcTransfer";
    chainId: string;
    sequence: number;
    accountNumber: number;
    feeDemon: string;
    feeAmount: number;
    gasLimit: number;
    memo: string;
    timeoutHeight?: number;
    data: any;
    publicKey?: string;
};
export interface SignMessageData {
    type: "amino" | "signDoc";
    data: string;
    prefix?: string;
    withTx?: boolean;
}
export declare abstract class CosmosWallet extends BaseWallet {
    abstract supportEthSign(): boolean;
    abstract getPrefix(): string;
    abstract getSlip44CoinType(): number;
    abstract getAminoConverters(): AminoConverters | undefined;
    abstract getExtraTypes(): ReadonlyArray<[string, GeneratedType]> | undefined;
    abstract pubKeyUrl(): string | undefined;
    getDerivedPath(param: GetDerivedPathParam): Promise<any>;
    getNewAddress(param: NewAddressParams): Promise<any>;
    checkPrivateKey(privateKeyHex: string): Promise<boolean>;
    validPrivateKey(param: ValidPrivateKeyParams): Promise<any>;
    validAddress(param: ValidAddressParams): Promise<any>;
    signTransaction(param: SignTxParams): Promise<any>;
    signMessage(param: SignTxParams): Promise<string>;
    signMessageWithTx(param: SignTxParams): Promise<any>;
    getAddressByPublicKey(param: GetAddressParams): Promise<string>;
    getMPCRawTransaction(param: MpcRawTransactionParam): Promise<any>;
    getMPCTransaction(param: MpcTransactionParam): Promise<string>;
    getMPCRawMessage(param: MpcRawTransactionParam): Promise<any>;
    getMPCSignedMessage(param: MpcMessageParam): Promise<any>;
    calcTxHash(param: CalcTxHashParams): Promise<string>;
    validSignedTransaction(param: ValidSignedTransactionParams): Promise<any>;
}
export declare class CommonCosmosWallet extends CosmosWallet {
    getPrefix(): string;
    supportEthSign(): boolean;
    getAminoConverters(): AminoConverters | undefined;
    getExtraTypes(): ReadonlyArray<[string, GeneratedType]> | undefined;
    getSlip44CoinType(): number;
    pubKeyUrl(): string | undefined;
}
export declare class AtomWallet extends CosmosWallet {
    getPrefix(): string;
    supportEthSign(): boolean;
    getAminoConverters(): AminoConverters | undefined;
    getExtraTypes(): ReadonlyArray<[string, GeneratedType]> | undefined;
    getSlip44CoinType(): number;
    pubKeyUrl(): string | undefined;
}
export declare class OsmoWallet extends CosmosWallet {
    getPrefix(): string;
    supportEthSign(): boolean;
    getAminoConverters(): AminoConverters | undefined;
    getExtraTypes(): ReadonlyArray<[string, GeneratedType]> | undefined;
    getSlip44CoinType(): number;
    pubKeyUrl(): string | undefined;
}
export declare class EvmosWallet extends CosmosWallet {
    getPrefix(): string;
    supportEthSign(): boolean;
    getAminoConverters(): AminoConverters | undefined;
    getExtraTypes(): ReadonlyArray<[string, GeneratedType]> | undefined;
    getSlip44CoinType(): number;
    pubKeyUrl(): string | undefined;
}
export declare class AxelarWallet extends CosmosWallet {
    getPrefix(): string;
    supportEthSign(): boolean;
    getAminoConverters(): AminoConverters | undefined;
    getExtraTypes(): ReadonlyArray<[string, GeneratedType]> | undefined;
    getSlip44CoinType(): number;
    pubKeyUrl(): string | undefined;
}
export declare class CronosWallet extends CosmosWallet {
    getPrefix(): string;
    supportEthSign(): boolean;
    getAminoConverters(): AminoConverters | undefined;
    getExtraTypes(): ReadonlyArray<[string, GeneratedType]> | undefined;
    getSlip44CoinType(): number;
    pubKeyUrl(): string | undefined;
}
export declare class IrisWallet extends CosmosWallet {
    getPrefix(): string;
    supportEthSign(): boolean;
    getAminoConverters(): AminoConverters | undefined;
    getExtraTypes(): ReadonlyArray<[string, GeneratedType]> | undefined;
    getSlip44CoinType(): number;
    pubKeyUrl(): string | undefined;
}
export declare class JunoWallet extends CosmosWallet {
    getPrefix(): string;
    supportEthSign(): boolean;
    getAminoConverters(): AminoConverters | undefined;
    getExtraTypes(): ReadonlyArray<[string, GeneratedType]> | undefined;
    getSlip44CoinType(): number;
    pubKeyUrl(): string | undefined;
}
export declare class KavaWallet extends CosmosWallet {
    getPrefix(): string;
    supportEthSign(): boolean;
    getAminoConverters(): AminoConverters | undefined;
    getExtraTypes(): ReadonlyArray<[string, GeneratedType]> | undefined;
    getSlip44CoinType(): number;
    pubKeyUrl(): string | undefined;
}
export declare class KujiraWallet extends CosmosWallet {
    getPrefix(): string;
    supportEthSign(): boolean;
    getAminoConverters(): AminoConverters | undefined;
    getExtraTypes(): ReadonlyArray<[string, GeneratedType]> | undefined;
    getSlip44CoinType(): number;
    pubKeyUrl(): string | undefined;
}
export declare class SecretWallet extends CosmosWallet {
    getPrefix(): string;
    supportEthSign(): boolean;
    getAminoConverters(): AminoConverters | undefined;
    getExtraTypes(): ReadonlyArray<[string, GeneratedType]> | undefined;
    getSlip44CoinType(): number;
    pubKeyUrl(): string | undefined;
}
export declare class StargazeWallet extends CosmosWallet {
    getPrefix(): string;
    supportEthSign(): boolean;
    getAminoConverters(): AminoConverters | undefined;
    getExtraTypes(): ReadonlyArray<[string, GeneratedType]> | undefined;
    getSlip44CoinType(): number;
    pubKeyUrl(): string | undefined;
}
export declare class TerraWallet extends CosmosWallet {
    getPrefix(): string;
    supportEthSign(): boolean;
    getAminoConverters(): AminoConverters | undefined;
    getExtraTypes(): ReadonlyArray<[string, GeneratedType]> | undefined;
    getSlip44CoinType(): number;
    pubKeyUrl(): string | undefined;
}
export declare class SeiWallet extends CosmosWallet {
    getPrefix(): string;
    supportEthSign(): boolean;
    getAminoConverters(): AminoConverters | undefined;
    getExtraTypes(): ReadonlyArray<[string, GeneratedType]> | undefined;
    getSlip44CoinType(): number;
    pubKeyUrl(): string | undefined;
}
export declare class DydxWallet extends CosmosWallet {
    getPrefix(): string;
    supportEthSign(): boolean;
    getAminoConverters(): AminoConverters | undefined;
    getExtraTypes(): ReadonlyArray<[string, GeneratedType]> | undefined;
    getSlip44CoinType(): number;
    pubKeyUrl(): string | undefined;
}
export declare class InjectiveWallet extends CosmosWallet {
    getPrefix(): string;
    supportEthSign(): boolean;
    getAminoConverters(): AminoConverters | undefined;
    getExtraTypes(): ReadonlyArray<[string, GeneratedType]> | undefined;
    getSlip44CoinType(): number;
    pubKeyUrl(): string | undefined;
    signMessage(param: SignTxParams): Promise<string>;
    signMessageWithTx(param: SignTxParams): Promise<any>;
}
export declare class CelestiaWallet extends CosmosWallet {
    getPrefix(): string;
    supportEthSign(): boolean;
    getAminoConverters(): AminoConverters | undefined;
    getExtraTypes(): ReadonlyArray<[string, GeneratedType]> | undefined;
    getSlip44CoinType(): number;
    pubKeyUrl(): string | undefined;
}
