import { BinaryReader, BinaryWriter } from "../../../binary";
export interface Timestamp {
    seconds: bigint;
    nanos: number;
}
export interface TimestampProtoMsg {
    typeUrl: "/google.protobuf.Timestamp";
    value: Uint8Array;
}
export type TimestampAmino = string;
export interface TimestampAminoMsg {
    type: "/google.protobuf.Timestamp";
    value: TimestampAmino;
}
export interface TimestampSDKType {
    seconds: bigint;
    nanos: number;
}
export declare const Timestamp: {
    typeUrl: string;
    is(o: any): o is Timestamp;
    isSDK(o: any): o is TimestampSDKType;
    isAmino(o: any): o is string;
    encode(message: Timestamp, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): Timestamp;
    fromPartial(object: Partial<Timestamp>): Timestamp;
    fromAmino(object: TimestampAmino): Timestamp;
    toAmino(message: Timestamp): TimestampAmino;
    fromAminoMsg(object: TimestampAminoMsg): Timestamp;
    fromProtoMsg(message: TimestampProtoMsg): Timestamp;
    toProto(message: Timestamp): Uint8Array;
    toProtoMsg(message: Timestamp): TimestampProtoMsg;
};
