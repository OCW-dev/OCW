import { EncodeObject } from "../encoding";
export interface AminoMsg {
    readonly type: string;
    readonly value: any;
}
export interface AminoConverter {
    readonly aminoType: string;
    readonly toAmino: (value: any) => any;
    readonly fromAmino: (value: any) => any;
}
export type AminoConverters = Record<string, AminoConverter | "not_supported_by_chain">;
export declare class AminoTypes {
    private readonly register;
    constructor(types: AminoConverters);
    toAmino({ typeUrl, value }: EncodeObject): AminoMsg;
    fromAmino({ type, value }: AminoMsg): EncodeObject;
}
