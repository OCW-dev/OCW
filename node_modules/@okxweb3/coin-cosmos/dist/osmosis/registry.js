"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OsmosisRegistry = void 0;
const gamm = __importStar(require("./gamm/v1beta1/tx"));
const pm = __importStar(require("./poolmanager/v1beta1/tx"));
const tf = __importStar(require("./tokenfactory/v1beta1/tx"));
const lu = __importStar(require("./lockup/tx"));
const sf = __importStar(require("./superfluid/tx"));
exports.OsmosisRegistry = [
    ["/osmosis.gamm.v1beta1.MsgJoinPool", gamm.MsgJoinPool],
    ["/osmosis.gamm.v1beta1.MsgExitPool", gamm.MsgExitPool],
    ["/osmosis.gamm.v1beta1.MsgSwapExactAmountIn", gamm.MsgSwapExactAmountIn],
    ["/osmosis.gamm.v1beta1.MsgSwapExactAmountOut", gamm.MsgSwapExactAmountOut],
    ["/osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn", gamm.MsgJoinSwapExternAmountIn],
    ["/osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut", gamm.MsgJoinSwapShareAmountOut],
    ["/osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut", gamm.MsgExitSwapExternAmountOut],
    ["/osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn", gamm.MsgExitSwapShareAmountIn],
    ["/osmosis.poolmanager.v1beta1.MsgSwapExactAmountIn", pm.MsgSwapExactAmountIn],
    ["/osmosis.poolmanager.v1beta1.MsgSwapExactAmountOut", pm.MsgSwapExactAmountOut],
    ["/osmosis.poolmanager.v1beta1.MsgSplitRouteSwapExactAmountIn", pm.MsgSplitRouteSwapExactAmountIn],
    ["/osmosis.poolmanager.v1beta1.MsgSplitRouteSwapExactAmountOut", pm.MsgSplitRouteSwapExactAmountOut],
    ["/osmosis.poolmanager.v1beta1.MsgSetDenomPairTakerFee", pm.MsgSetDenomPairTakerFee],
    ["/osmosis.lockup.MsgLockTokens", lu.MsgLockTokens],
    ["/osmosis.lockup.MsgBeginUnlockingAll", lu.MsgBeginUnlockingAll],
    ["/osmosis.lockup.MsgBeginUnlocking", lu.MsgBeginUnlocking],
    ["/osmosis.lockup.MsgExtendLockup", lu.MsgExtendLockup],
    ["/osmosis.lockup.MsgForceUnlock", lu.MsgForceUnlock],
    ["/osmosis.lockup.MsgSetRewardReceiverAddress", lu.MsgSetRewardReceiverAddress],
    ["/osmosis.superfluid.MsgSuperfluidDelegate", sf.MsgSuperfluidDelegate],
    ["/osmosis.superfluid.MsgSuperfluidUndelegate", sf.MsgSuperfluidUndelegate],
    ["/osmosis.superfluid.MsgSuperfluidUnbondLock", sf.MsgSuperfluidUnbondLock],
    ["/osmosis.superfluid.MsgSuperfluidUndelegateAndUnbondLock", sf.MsgSuperfluidUndelegateAndUnbondLock],
    ["/osmosis.superfluid.MsgLockAndSuperfluidDelegate", sf.MsgLockAndSuperfluidDelegate],
    ["/osmosis.superfluid.MsgCreateFullRangePositionAndSuperfluidDelegate", sf.MsgCreateFullRangePositionAndSuperfluidDelegate],
    ["/osmosis.superfluid.MsgUnPoolWhitelistedPool", sf.MsgUnPoolWhitelistedPool],
    ["/osmosis.superfluid.MsgUnlockAndMigrateSharesToFullRangeConcentratedPosition", sf.MsgUnlockAndMigrateSharesToFullRangeConcentratedPosition],
    ["/osmosis.superfluid.MsgAddToConcentratedLiquiditySuperfluidPosition", sf.MsgAddToConcentratedLiquiditySuperfluidPosition],
    ["/osmosis.superfluid.MsgUnbondConvertAndStake", sf.MsgUnbondConvertAndStake],
    ["/osmosis.tokenfactory.v1beta1.MsgCreateDenom", tf.MsgCreateDenom],
    ["/osmosis.tokenfactory.v1beta1.MsgMint", tf.MsgMint],
    ["/osmosis.tokenfactory.v1beta1.MsgBurn", tf.MsgBurn],
    ["/osmosis.tokenfactory.v1beta1.MsgChangeAdmin", tf.MsgChangeAdmin],
    ["/osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata", tf.MsgSetDenomMetadata],
    ["/osmosis.tokenfactory.v1beta1.MsgSetBeforeSendHook", tf.MsgSetBeforeSendHook],
    ["/osmosis.tokenfactory.v1beta1.MsgForceTransfer", tf.MsgForceTransfer]
];
//# sourceMappingURL=registry.js.map