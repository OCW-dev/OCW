import { _m0 } from "@okxweb3/crypto-lib";
export declare const protobufPackage = "ibc.applications.transfer.v1";
export interface DenomTrace {
    path: string;
    baseDenom: string;
}
export interface Params {
    sendEnabled: boolean;
    receiveEnabled: boolean;
}
export declare const DenomTrace: {
    encode(message: DenomTrace, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): DenomTrace;
    fromJSON(object: any): DenomTrace;
    toJSON(message: DenomTrace): unknown;
    fromPartial<I extends {
        path?: string | undefined;
        baseDenom?: string | undefined;
    } & {
        path?: string | undefined;
        baseDenom?: string | undefined;
    } & Record<Exclude<keyof I, keyof DenomTrace>, never>>(object: I): DenomTrace;
};
export declare const Params: {
    encode(message: Params, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Params;
    fromJSON(object: any): Params;
    toJSON(message: Params): unknown;
    fromPartial<I extends {
        sendEnabled?: boolean | undefined;
        receiveEnabled?: boolean | undefined;
    } & {
        sendEnabled?: boolean | undefined;
        receiveEnabled?: boolean | undefined;
    } & Record<Exclude<keyof I, keyof Params>, never>>(object: I): Params;
};
