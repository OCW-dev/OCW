"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Duration = exports.protobufPackage = void 0;
const crypto_lib_1 = require("@okxweb3/crypto-lib");
const crypto_lib_2 = require("@okxweb3/crypto-lib");
const tx_1 = require("../../cosmos/tx/v1beta1/tx");
exports.protobufPackage = "google.protobuf";
function createBaseDuration() {
    return { seconds: crypto_lib_1.Long.ZERO, nanos: 0 };
}
exports.Duration = {
    encode(message, writer = crypto_lib_2._m0.Writer.create()) {
        if (!message.seconds.isZero()) {
            writer.uint32(8).int64(message.seconds);
        }
        if (message.nanos !== 0) {
            writer.uint32(16).int32(message.nanos);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof crypto_lib_2._m0.Reader ? input : new crypto_lib_2._m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDuration();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.seconds = reader.int64();
                    break;
                case 2:
                    message.nanos = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            seconds: (0, tx_1.isSet)(object.seconds) ? crypto_lib_1.Long.fromString(object.seconds) : crypto_lib_1.Long.ZERO,
            nanos: (0, tx_1.isSet)(object.nanos) ? Number(object.nanos) : 0,
        };
    },
    toJSON(message) {
        const obj = {};
        message.seconds !== undefined && (obj.seconds = (message.seconds || crypto_lib_1.Long.ZERO).toString());
        message.nanos !== undefined && (obj.nanos = Math.round(message.nanos));
        return obj;
    },
    fromPartial(object) {
        const message = createBaseDuration();
        message.seconds =
            object.seconds !== undefined && object.seconds !== null ? crypto_lib_1.Long.fromValue(object.seconds) : crypto_lib_1.Long.ZERO;
        message.nanos = object.nanos ?? 0;
        return message;
    },
};
if (crypto_lib_2._m0.util.Long !== crypto_lib_1.Long) {
    crypto_lib_2._m0.util.Long = crypto_lib_1.Long;
    crypto_lib_2._m0.configure();
}
//# sourceMappingURL=duration.js.map